version: '2.3'

services:

  ##############################################################################
  # LDAP
  #
  # openldap listens on port 389 and 636 (ssl)
  ##############################################################################

  # openldap:
  #   image: osixia/openldap:latest
  #   environment:
  #     LDAP_ORGANISATION:    Example
  #     LDAP_DOMAIN:          example
  #     LDAP_ADMIN_PASSWORD:  secret
  #   volumes:
  #     - openldap-database:/var/lib/ldap
  #     - openldap-config:/etc/ldap/slapd.d
  #     - ./example.ldif:/example.ldif

  # phpldapadmin:
  #   image: osixia/phpldapadmin:latest  
  #   depends_on:
  #     - openldap
  #   ports:
  #     - 8092:80
  #   environment:
  #     PHPLDAPADMIN_LDAP_HOSTS:  openldap # IP of openldap server
  #     PHPLDAPADMIN_HTTPS:       'false'


  postgres:
    image: postgres:11.0
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    environment:
      POSTGRES_DB:        keycloak
      POSTGRES_USER:      keycloak
      POSTGRES_PASSWORD:  password
    volumes:
      - pg-storage:/var/lib/postgresql/data:Z

  keycloak:
    image: jboss/keycloak:5.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/auth/realms/master"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 8s
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_VENDOR:                POSTGRES
      DB_ADDR:                  postgres
      DB_DATABASE:              keycloak
      DB_USER:                  keycloak
      DB_SCHEMA:                public
      DB_PASSWORD:              password
      KEYCLOAK_USER:            admin
      KEYCLOAK_PASSWORD:        secret
      PROXY_ADDRESS_FORWARDING: 'true'
    ports:
      - 8080:8080
    volumes:
      # - ./nginx/nginx-selfsigned.crt:/etc/x509/https/tls.crt
      # - ./nginx/nginx-selfsigned.key:/etc/x509/https/tls.key
      - ~/etc/localtime:/etc/localtime:ro

  appserver:
    image: python:2-alpine
    environment:
      HOST: 0.0.0.0
      PORT: 80
    volumes:
      - ./appserver.py:/appserver.py
    command: [python, /appserver.py]

  nginx:
    image: nginx:1.15.7
    healthcheck:
      test: ["CMD", "/bin/bash", "service nginx status"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      appserver:
        condition: service_started
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt
      - ./nginx/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key
      - ./nginx/snippets:/etc/nginx/snippets
      - ~/etc/localtime:/etc/localtime:ro
    command: [nginx-debug, '-g', 'daemon off;']

  nginx-upstream:
    image: nginx:1.15.7
    healthcheck:
      test: ["CMD", "/bin/bash", "service nginx status"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    ports:
      - 4181:80
    volumes:
      - ./nginx-upstream/conf.d:/etc/nginx/conf.d
      - ./nginx-upstream/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-upstream/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt
      - ./nginx-upstream/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key
      - ./nginx-upstream/snippets:/etc/nginx/snippets
      - ~/etc/localtime:/etc/localtime:ro
    command: [nginx-debug, '-g', 'daemon off;']

  gatekeeper:
    image: keycloak/keycloak-gatekeeper:5.0.0
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      nginx:
        condition: service_started
    volumes:
      - ./gatekeeper2.yaml:/gatekeeper.yaml:ro
      - ~/etc/localtime:/etc/localtime:ro
    command: [
      --config,                   "/gatekeeper.yaml",
      --listen,                   "0.0.0.0:3000",
      --discovery-url,            "http://${HOST}/auth/realms/master",
      # --redirection-url,          "http://gatekeeper:3000",
      --upstream-url,             "http://${HOST}:4181",
      --client-id,                appserver,
      --client-secret,            d7bed7f9-73d9-4125-ace3-8493bcede8aa,
      --verbose
    ]

volumes:
  openldap-database: null
  openldap-config: null
  pg-storage: null
